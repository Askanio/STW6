@using Microsoft.Ajax.Utilities
@using ScrewTurn.Wiki.Web.Code
@using ScrewTurn.Wiki.Web.Code.Extensions
@using ScrewTurn.Wiki.Web.Localization.Admin
@model ScrewTurn.Wiki.Web.Models.Admin.Groups.EditUserGroupModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@using (Html.BeginForm("SaveUserGroup", "Groups"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.GroupNameEnabled)
    @Html.HiddenFor(model => model.CreateUserGroup)
    @Html.HiddenFor(model => model.CurrentGroupName)
    <div class="leftaligned">
        <h2 class="sectiontitle">@AdminGroups.LblGroups_Text</h2>

        <div id="EditGroupDiv">
            <h2 class="separator">@AdminGroups.LblEditTitle_Text</h2>

            @{
                var btnSaveDescription = Model.CreateUserGroup ? AdminGroups.BtnCreate_Text : AdminGroups.BtnSave_Text;
                var btnSaveTooltip = Model.CreateUserGroup ? AdminGroups.BtnCreate_ToolTip : AdminGroups.BtnSave_ToolTip;
            }
            @AdminGroups.LblProvider_Text<br />
            @Html.WikiDropDownListFor(m => m.SelectedProvider, Model.Providers, new {}, !Model.CreateUserGroup)
            <br/>

            @AdminGroups.LblName_Text<br/>
            @Html.WikiTextBoxFor(m => m.GroupName, new {@class = "textbox"}, !Model.GroupNameEnabled)
            @Html.ValidationMessageFor(model => model.GroupName, "", new {@class = "resulterror"})
            <br />

            @AdminGroups.LblDescription_Text<br/>
            @Html.WikiTextBoxFor(m => m.Description, new { @class = "textbox" }, !Model.DescriptionEnabled)
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "resulterror" })
            <br />

            <div id="AclSelectorDiv">
                <h3>@AdminGroups.LblGlobalPermissions_Text</h3>
                @if (Model.ActionsSelectorVisible)
                {
                    @Html.Action("GetAclActionsSelector", "AclActionsSelector", new { res = AclResources.Globals, grantedActions = @Model.ActionsGrant, deniedActions = @Model.ActionsDeny })
                }
            </div>

            <div class="ButtonsDiv">
                @if (Model.ButtonSaveVisible)
                {
                    <input type="submit" class="button" value="@btnSaveDescription" title="@btnSaveTooltip" />
                }
                @if (Model.ButtonDeleteVisible)
                {
                    @Html.ActionLink(AdminGroups.BtnDelete_Text, "DeleteUserGroup", "Groups", new { groupName = @Model.GroupName }, new {@class = "link-button", title = AdminGroups.BtnDelete_ToolTip})
                }
                @Html.ActionLink(AdminGroups.BtnCancel_Text, "UserGroups", "Groups", null, new { @class = "link-button", title = AdminGroups.BtnCancel_ToolTip })
            </div>

        </div>

        @if (!MvcHtmlString.IsNullOrEmpty(Html.ValidationSummary(true)))
        {
            <div class="resulterror">@Html.ValidationSummary(true)</div>
        }
        @if (!Model.ResultText.IsNullOrWhiteSpace())
        {
            <div class="messagebox">
                <span class="@Model.ResultCss">@Html.Raw(Model.ResultText)</span>
            </div>
        }
    </div>
}
<div style="clear: both;"></div>